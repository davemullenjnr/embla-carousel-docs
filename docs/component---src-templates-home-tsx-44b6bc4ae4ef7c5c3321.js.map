{"version":3,"sources":["webpack:///./src/components/Hero/Brand.tsx","webpack:///./src/components/Hero/Cta.tsx","webpack:///./src/components/Hero/Hero.tsx","webpack:///./src/templates/Home.tsx"],"names":["Wrapper","styled","div","breakpoints","minSm","EmblaLogo","SiteLogo","createSquareSizeStyles","theme","current","THEME_KEYS","DARK","H1","h1","textHighContrast","gradientTextStyles","minXs","H2","h2","textMediumContrast","maxSm","Brand","useSiteMetadata","title","description","split","map","word","index","words","key","length","CtaWrapper","P","p","hiddenAtBreakpointStyles","Cta","$hidden","to","Hero","MdxWrapper","Home","props","body","data","mdx","siteUrl","Seo","url","type","removeProtocol","shareImage","maskable"],"mappings":"iOAOMA,EAAUC,IAAOC,IAAV,qEAAGD,CAAH,uLAUTE,IAAYC,OAMVC,EAAYJ,YAAOK,KAAV,uEAAGL,CAAH,qIACXM,YAAuB,UACd,qBAAGC,MAAmBC,UAAYC,IAAWC,KAAO,IAAO,KAOpER,IAAYC,MACVG,YAAuB,UAMvBK,EAAKX,IAAOY,GAAV,gEAAGZ,CAAH,gbACG,qBAAGO,MAAkBM,mBAQ1BC,IAaFZ,IAAYa,MAQZb,IAAYC,OAgBVa,EAAKhB,IAAOiB,GAAV,gEAAGjB,CAAH,6HACG,qBAAGO,MAAkBW,qBAI5BhB,IAAYiB,MAKZjB,IAAYC,OAIHiB,EAAQ,WAAM,MACMC,cAAvBC,EADiB,EACjBA,MAAOC,EADU,EACVA,YAEf,OACE,kBAACxB,EAAD,KACE,kBAACK,EAAD,MACA,kBAACO,EAAD,KACGW,EAAME,MAAM,KAAKC,KAAI,SAACC,EAAMC,EAAOC,GAAd,OACpB,0BAAMC,IAAQH,EAAL,IAAaC,GACnBA,IAAUC,EAAME,OAAS,EAAIJ,EAAUA,EAAvC,SAIP,kBAACV,EAAD,KAAKO,K,YCxGLQ,EAAa/B,IAAOC,IAAV,kEAAGD,CAAH,4FAFE,QAOdE,IAAYC,OAKV6B,EAAIhC,IAAOiC,EAAV,yDAAGjC,CAAH,kGACI,qBAAGO,MAAkBW,qBAK5BhB,IAAYC,MAGZ+B,KAGSC,EAAM,WACjB,OACE,kBAACJ,EAAD,KACE,kBAACC,EAAD,CAAGI,QAAQ,SAAX,sGAEgC,IAC9B,kBAAC,IAAD,CAAaC,GAAG,iBAAhB,iBAHF,oBAMA,kBAAC,IAAD,CAASA,GAAG,oBAAZ,kBCnCOC,EAAO,WAClB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,wBCKAC,EAAavC,IAAOC,IAAV,uEAAGD,CAAH,iCAFE,WAuDHwC,UA7BF,SAACC,GAAoB,IACxBC,EAASD,EAAME,KAAKC,IAApBF,KADwB,EAECrB,cAAzBwB,EAFwB,EAExBA,QAAStB,EAFe,EAEfA,YAEjB,OACE,oCACE,kBAACuB,EAAA,EAAD,CAAKxB,MAAOC,EAAaA,YAAaA,EAAawB,IAAKF,GACtD,4BAAQG,KAAK,uBAAb,oIAKiBC,YAAeJ,GALhC,qCAMwBtB,EANxB,6BAOgBsB,EAPhB,gCAQkBA,EAAUK,IAR5B,8BASiBL,EAAUM,IAT3B,iCAcF,kBAAC,EAAD,MACA,kBAACZ,EAAD,KACE,kBAAC,IAAD,CAAKG,KAAMA","file":"component---src-templates-home-tsx-44b6bc4ae4ef7c5c3321.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { breakpoints, THEME_KEYS } from 'consts'\nimport { SiteLogo } from 'components/SiteLogo'\nimport { createSquareSizeStyles, gradientTextStyles } from 'utils'\nimport { useSiteMetadata } from 'hooks'\n\nconst Wrapper = styled.div`\n  position: relative;\n  text-align: center;\n  padding-top: 2rem;\n  margin-right: -1rem;\n  margin-left: -1rem;\n\n  @media (min-height: 480px) {\n    padding-top: 9rem;\n  }\n  ${breakpoints.minSm} {\n    padding-top: 11rem;\n    padding-bottom: 11rem;\n  }\n`\n\nconst EmblaLogo = styled(SiteLogo)`\n  ${createSquareSizeStyles('25rem')};\n  opacity: ${({ theme }) => (theme.current === THEME_KEYS.DARK ? 0.15 : 0.1)};\n  position: absolute;\n  pointer-events: none;\n  transform: translate(-50%, -50%);\n  top: 10%;\n  left: 10%;\n\n  ${breakpoints.minSm} {\n    ${createSquareSizeStyles('36rem')};\n    top: 50%;\n    left: 50%;\n  }\n`\n\nconst H1 = styled.h1`\n  color: ${({ theme }) => theme.textHighContrast};\n  position: relative;\n  font-weight: 900;\n  font-size: 3rem;\n  line-height: 0.9;\n  margin-bottom: 1.8rem;\n\n  > span:nth-child(2) {\n    ${gradientTextStyles};\n  }\n\n  > span {\n    display: block;\n  }\n  > span:nth-child(1) {\n    font-size: 5rem;\n  }\n  > span:nth-child(2) {\n    font-size: 5.8rem;\n  }\n\n  ${breakpoints.minXs} {\n    > span:nth-child(1) {\n      font-size: 6rem;\n    }\n    > span:nth-child(2) {\n      font-size: 7rem;\n    }\n  }\n  ${breakpoints.minSm} {\n    margin-bottom: 0;\n    line-height: 1.2;\n\n    > span {\n      display: inline;\n    }\n    > span:nth-child(1) {\n      font-size: 7rem;\n    }\n    > span:nth-child(2) {\n      font-size: 7rem;\n    }\n  }\n`\n\nconst H2 = styled.h2`\n  color: ${({ theme }) => theme.textMediumContrast};\n  line-height: 1.5;\n  font-size: 2rem;\n\n  ${breakpoints.maxSm} {\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 50rem;\n  }\n  ${breakpoints.minSm} {\n    font-size: 2.2rem;\n  }\n`\nexport const Brand = () => {\n  const { title, description } = useSiteMetadata()\n\n  return (\n    <Wrapper>\n      <EmblaLogo />\n      <H1>\n        {title.split(' ').map((word, index, words) => (\n          <span key={`${word}-${index}`}>\n            {index === words.length - 1 ? word : `${word} `}\n          </span>\n        ))}\n      </H1>\n      <H2>{description}</H2>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { breakpoints } from 'consts'\nimport { hiddenAtBreakpointStyles } from 'utils'\nimport { ContentLink, CtaLink } from 'components/Link'\n\nconst MAX_WIDTH = '60rem'\n\nconst CtaWrapper = styled.div`\n  max-width: ${MAX_WIDTH};\n  text-align: center;\n  margin: 2.4rem auto 0 auto;\n\n  ${breakpoints.minSm} {\n    margin: 4rem auto 0 auto;\n  }\n`\n\nconst P = styled.p`\n  color: ${({ theme }) => theme.textMediumContrast};\n  text-align: center;\n  margin-bottom: 2.4rem;\n  font-size: 1.6rem;\n\n  ${breakpoints.minSm} {\n    font-size: 1.8rem;\n  }\n  ${hiddenAtBreakpointStyles};\n`\n\nexport const Cta = () => {\n  return (\n    <CtaWrapper>\n      <P $hidden=\"maxSm\">\n        Build awesome carousels by extending Embla Carousel with your own CSS\n        and JavaScript. Check out the{' '}\n        <ContentLink to=\"/get-started/\">documentation</ContentLink> to get\n        started.\n      </P>\n      <CtaLink to=\"/examples/basic/\">Try Examples</CtaLink>\n    </CtaWrapper>\n  )\n}\n","import React from 'react'\nimport { Brand } from './Brand'\nimport { Cta } from './Cta'\n\nexport const Hero = () => {\n  return (\n    <>\n      <Brand />\n      <Cta />\n    </>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport maskable from 'assets/images/maskable.png'\nimport shareImage from 'assets/images/share-image.jpg'\nimport { graphql } from 'gatsby'\nimport { useSiteMetadata } from 'hooks'\nimport { Hero } from 'components/Hero'\nimport { Seo } from 'components/Seo'\nimport { Mdx } from 'components/Page'\nimport { removeProtocol } from 'utils'\n\nconst MAX_WIDTH = '68.2rem'\n\nconst MdxWrapper = styled.div`\n  max-width: ${MAX_WIDTH};\n  margin: 0 auto;\n`\n\nexport const query = graphql`\n  query HomeQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      body\n    }\n  }\n`\n\ntype PropType = {\n  data: {\n    mdx: {\n      body: string\n    }\n  }\n  pageContext: {\n    id: string\n  }\n}\n\nconst Home = (props: PropType) => {\n  const { body } = props.data.mdx\n  const { siteUrl, description } = useSiteMetadata()\n\n  return (\n    <>\n      <Seo title={description} description={description} url={siteUrl}>\n        <script type=\"application/ld+json\">\n          {`\n            {\n              \"@context\": \"https://schema.org\",\n              \"@type\": \"Organization\",\n              \"name\": \"${removeProtocol(siteUrl)}\",\n              \"description\": \"${description}\",\n              \"url\": \"${siteUrl}/\",\n              \"image\": \"${siteUrl}${shareImage}\",\n              \"logo\": \"${siteUrl}${maskable}\"\n            }\n          `}\n        </script>\n      </Seo>\n      <Hero />\n      <MdxWrapper>\n        <Mdx body={body} />\n      </MdxWrapper>\n    </>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}